{"remainingRequest":"C:\\Users\\98751\\Desktop\\code\\projec-SPH\\app\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\98751\\Desktop\\code\\projec-SPH\\app\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\98751\\Desktop\\code\\projec-SPH\\app\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\98751\\Desktop\\code\\projec-SPH\\app\\src\\pages\\Search\\index.vue?vue&type=template&id=4aa45acf&scoped=true&","dependencies":[{"path":"C:\\Users\\98751\\Desktop\\code\\projec-SPH\\app\\src\\pages\\Search\\index.vue","mtime":1640263055149},{"path":"C:\\Users\\98751\\Desktop\\code\\projec-SPH\\app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1638364636780},{"path":"C:\\Users\\98751\\Desktop\\code\\projec-SPH\\app\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1638364638836},{"path":"C:\\Users\\98751\\Desktop\\code\\projec-SPH\\app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1638364636780},{"path":"C:\\Users\\98751\\Desktop\\code\\projec-SPH\\app\\node_modules\\vue-loader\\lib\\index.js","mtime":1638364637649}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}