{"remainingRequest":"C:\\Users\\98751\\Desktop\\code\\projec-SPH\\app\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\98751\\Desktop\\code\\projec-SPH\\app\\src\\api\\mockAjax.js","dependencies":[{"path":"C:\\Users\\98751\\Desktop\\code\\projec-SPH\\app\\src\\api\\mockAjax.js","mtime":1639194862585},{"path":"C:\\Users\\98751\\Desktop\\code\\projec-SPH\\app\\babel.config.js","mtime":1638364646730},{"path":"C:\\Users\\98751\\Desktop\\code\\projec-SPH\\app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1638364636780},{"path":"C:\\Users\\98751\\Desktop\\code\\projec-SPH\\app\\node_modules\\babel-loader\\lib\\index.js","mtime":1638364638144}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7Ci8v5a+55LqOYXhpb3Pov5vooYzkuozmrKHlsIHoo4UKaW1wb3J0IGF4aW9zIGZyb20gImF4aW9zIjsgLy/lvJXlhaXov5vluqbmnaEKCmltcG9ydCBucHJvZ3Jlc3MgZnJvbSAnbnByb2dyZXNzJzsKaW1wb3J0ICJucHJvZ3Jlc3MvbnByb2dyZXNzLmNzcyI7IC8vIGNvbnNvbGUubG9nKG5wcm9ncmVzcykKLy9zdGFydO+8mui/m+W6puadoeW8gOWniyAgZG9uZe+8mui/m+W6puadoee7k+adnwovLzHvvJrliKnnlKhheGlvc+WvueixoeeahOaWueazlWNyZWF0Ze+8jOWOu+WIm+W7uuS4gOS4qmF4aW9z5a6e5L6LCi8vMu+8mnJlcXVzZXRz5bCx5pivYXhpb3PvvIzlj6rkuI3ov4fnqI3lvq7phY3nva7kuIDkuIsKCnZhciByZXF1c2V0cyA9IGF4aW9zLmNyZWF0ZSh7CiAgLy/phY3nva7lr7nosaEKICAvL+WfuuehgOi3r+W+hO+8muWPkeivt+axgueahOaXtuWAme+8jOi3r+W+hOW9k+S4reS8muWHuueOsGFwaQogIGJhc2VVUkw6ICcvbW9jaycsCiAgLy/ku6Pooajor7fmsYLotoXml7bnmoTml7bpl7Q1cwogIHRpbWVvdXQ6IDUwMDAKfSk7IC8v6K+35rGC5oum5oiq5Zmo77ya5Zyo5Y+R6K+35rGC5LmL5YmN77yM6K+35rGC5oum5oiq5Zmo5Y+v5Lul5qOA5rWL5Yiw77yM5Y+v5Lul5Zyo6K+35rGC5Y+R5Ye65LmL5YmN5YGa5LiA5Lqb5LqL5oOFCgpyZXF1c2V0cy5pbnRlcmNlcHRvcnMucmVxdWVzdC51c2UoZnVuY3Rpb24gKGNvbmZpZykgewogIC8vY29uZmln77ya6YWN572u5a+56LGh77yM5a+56LGh6YeM6Z2i5pyJ5LiA5Liq5bGe5oCn5b6I6YeN6KaB77yMaGVhZGVyc+ivt+axguWktAogIC8v6L+b5bqm5p2h5byA5aeLCiAgbnByb2dyZXNzLnN0YXJ0KCk7CiAgcmV0dXJuIGNvbmZpZzsKfSk7CnJlcXVzZXRzLmludGVyY2VwdG9ycy5yZXNwb25zZS51c2UoZnVuY3Rpb24gKHJlcykgewogIC8v5oiQ5Yqf55qE5Zue6LCD5Ye95pWw77ya5pyN5Yqh5Zmo5ZON5bqU5pWw5o2u5Zue5p2l5Lul5ZCO77yM5ZON5bqU5oum5oiq5Zmo5Y+v5Lul5qOA5rWL5Yiw77yM5YGa5LiA5Lqb5LqL5oOFCiAgLy/ov5vluqbmnaHnu5PmnZ8KICBucHJvZ3Jlc3MuZG9uZSgpOwogIHJldHVybiByZXMuZGF0YTsKfSwgZnVuY3Rpb24gKGVycm9yKSB7CiAgLy/lk43lupTlpLHotKXnmoTlm57osIPlh73mlbAKICByZXR1cm4gUHJvbWlzZS5yZWplY3QobmV3IEVycm9yKCdmYWlsZScpKTsKfSk7CmV4cG9ydCBkZWZhdWx0IHJlcXVzZXRzOw=="},{"version":3,"sources":["C:/Users/98751/Desktop/code/projec-SPH/app/src/api/mockAjax.js"],"names":["axios","nprogress","requsets","create","baseURL","timeout","interceptors","request","use","config","start","response","res","done","data","error","Promise","reject","Error"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,SAAP,MAAsB,WAAtB;AACA,OAAO,yBAAP,C,CACA;AACA;AAEA;AACA;;AACA,IAAMC,QAAQ,GAAGF,KAAK,CAACG,MAAN,CAAa;AAC1B;AACA;AACAC,EAAAA,OAAO,EAAE,OAHiB;AAI1B;AACAC,EAAAA,OAAO,EAAE;AALiB,CAAb,CAAjB,C,CAOA;;AACAH,QAAQ,CAACI,YAAT,CAAsBC,OAAtB,CAA8BC,GAA9B,CAAkC,UAACC,MAAD,EAAY;AAC1C;AACA;AACAR,EAAAA,SAAS,CAACS,KAAV;AACA,SAAOD,MAAP;AACH,CALD;AAMAP,QAAQ,CAACI,YAAT,CAAsBK,QAAtB,CAA+BH,GAA/B,CAAmC,UAACI,GAAD,EAAS;AACxC;AACA;AACAX,EAAAA,SAAS,CAACY,IAAV;AACA,SAAOD,GAAG,CAACE,IAAX;AACH,CALD,EAKG,UAACC,KAAD,EAAW;AACV;AACA,SAAOC,OAAO,CAACC,MAAR,CAAe,IAAIC,KAAJ,CAAU,OAAV,CAAf,CAAP;AACH,CARD;AASA,eAAehB,QAAf","sourcesContent":["//对于axios进行二次封装\r\nimport axios from \"axios\";\r\n//引入进度条\r\nimport nprogress from 'nprogress'\r\nimport \"nprogress/nprogress.css\"\r\n// console.log(nprogress)\r\n//start：进度条开始  done：进度条结束\r\n\r\n//1：利用axios对象的方法create，去创建一个axios实例\r\n//2：requsets就是axios，只不过稍微配置一下\r\nconst requsets = axios.create({\r\n    //配置对象\r\n    //基础路径：发请求的时候，路径当中会出现api\r\n    baseURL: '/mock',\r\n    //代表请求超时的时间5s\r\n    timeout: 5000\r\n})\r\n//请求拦截器：在发请求之前，请求拦截器可以检测到，可以在请求发出之前做一些事情\r\nrequsets.interceptors.request.use((config) => {\r\n    //config：配置对象，对象里面有一个属性很重要，headers请求头\r\n    //进度条开始\r\n    nprogress.start()\r\n    return config;\r\n})\r\nrequsets.interceptors.response.use((res) => {\r\n    //成功的回调函数：服务器响应数据回来以后，响应拦截器可以检测到，做一些事情\r\n    //进度条结束\r\n    nprogress.done()\r\n    return res.data;\r\n}, (error) => {\r\n    //响应失败的回调函数\r\n    return Promise.reject(new Error('faile'))\r\n})\r\nexport default requsets"]}]}