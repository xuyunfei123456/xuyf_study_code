{"remainingRequest":"C:\\Users\\98751\\Desktop\\code\\projec-SPH\\app\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\98751\\Desktop\\code\\projec-SPH\\app\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\98751\\Desktop\\code\\projec-SPH\\app\\src\\store\\trade\\index.js","dependencies":[{"path":"C:\\Users\\98751\\Desktop\\code\\projec-SPH\\app\\src\\store\\trade\\index.js","mtime":1642661301063},{"path":"C:\\Users\\98751\\Desktop\\code\\projec-SPH\\app\\babel.config.js","mtime":1642672032543},{"path":"C:\\Users\\98751\\Desktop\\code\\projec-SPH\\app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1638364636780},{"path":"C:\\Users\\98751\\Desktop\\code\\projec-SPH\\app\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1638364638610},{"path":"C:\\Users\\98751\\Desktop\\code\\projec-SPH\\app\\node_modules\\babel-loader\\lib\\index.js","mtime":1638364638144}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkM6XFxVc2Vyc1xcOTg3NTFcXERlc2t0b3BcXGNvZGVcXHByb2plYy1TUEhcXGFwcFxcbm9kZV9tb2R1bGVzXFxAYmFiZWxcXHJ1bnRpbWVcXGhlbHBlcnNcXGVzbVxcYXN5bmNUb0dlbmVyYXRvci5qcyI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0IHsgcmVxQWRkcmVzc0luZm8sIHJlcU9yZGVySW5mbyB9IGZyb20gIkAvYXBpIjsKdmFyIHN0YXRlID0gewogIGFkZHJlc3M6IFtdLAogIG9yZGVySW5mbzoge30KfTsKdmFyIG11dGF0aW9ucyA9IHsKICBHRVRVU0VSQUREUkVTUzogZnVuY3Rpb24gR0VUVVNFUkFERFJFU1Moc3RhdGUsIGFkZHJlc3MpIHsKICAgIHN0YXRlLmFkZHJlc3MgPSBhZGRyZXNzOwogIH0sCiAgR0VUT1JERVJJTkZPOiBmdW5jdGlvbiBHRVRPUkRFUklORk8oc3RhdGUsIG9yZGVySW5mbykgewogICAgc3RhdGUub3JkZXJJbmZvID0gb3JkZXJJbmZvOwogIH0KfTsKdmFyIGFjdGlvbnMgPSB7CiAgLy/ojrflj5bnlKjmiLflnLDlnYDkv6Hmga8KICBnZXRVc2VyQWRkcmVzczogZnVuY3Rpb24gZ2V0VXNlckFkZHJlc3MoX3JlZikgewogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgdmFyIGNvbW1pdCwgcmVzOwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgY29tbWl0ID0gX3JlZi5jb21taXQ7CiAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDE7CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDQ7CiAgICAgICAgICAgICAgcmV0dXJuIHJlcUFkZHJlc3NJbmZvKCk7CgogICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgICAgcmVzID0gX2NvbnRleHQuc2VudDsKCiAgICAgICAgICAgICAgaWYgKHJlcy5jb2RlID09IDIwMCkgewogICAgICAgICAgICAgICAgY29tbWl0KCdHRVRVU0VSQUREUkVTUycsIHJlcy5kYXRhKTsKICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxMDsKICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgIGNhc2UgODoKICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gODsKICAgICAgICAgICAgICBfY29udGV4dC50MCA9IF9jb250ZXh0WyJjYXRjaCJdKDEpOwoKICAgICAgICAgICAgY2FzZSAxMDoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZSwgbnVsbCwgW1sxLCA4XV0pOwogICAgfSkpKCk7CiAgfSwKICAvL+iOt+WPluWVhuWTgea4heWNleaVsOaNrgogIGdldE9yZGVySW5mbzogZnVuY3Rpb24gZ2V0T3JkZXJJbmZvKF9yZWYyKSB7CiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMigpIHsKICAgICAgdmFyIGNvbW1pdCwgcmVzOwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIGNvbW1pdCA9IF9yZWYyLmNvbW1pdDsKICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDM7CiAgICAgICAgICAgICAgcmV0dXJuIHJlcU9yZGVySW5mbygpOwoKICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgIHJlcyA9IF9jb250ZXh0Mi5zZW50OwoKICAgICAgICAgICAgICBpZiAocmVzLmNvZGUgPT0gMjAwKSB7CiAgICAgICAgICAgICAgICBjb21taXQoJ0dFVE9SREVSSU5GTycsIHJlcy5kYXRhKTsKICAgICAgICAgICAgICB9CgogICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlMik7CiAgICB9KSkoKTsKICB9Cn07CnZhciBnZXR0ZXJzID0ge307CmV4cG9ydCBkZWZhdWx0IHsKICBzdGF0ZTogc3RhdGUsCiAgbXV0YXRpb25zOiBtdXRhdGlvbnMsCiAgYWN0aW9uczogYWN0aW9ucywKICBnZXR0ZXJzOiBnZXR0ZXJzCn07"},{"version":3,"sources":["C:/Users/98751/Desktop/code/projec-SPH/app/src/store/trade/index.js"],"names":["reqAddressInfo","reqOrderInfo","state","address","orderInfo","mutations","GETUSERADDRESS","GETORDERINFO","actions","getUserAddress","commit","res","code","data","getOrderInfo","getters"],"mappings":";;AAAA,SACIA,cADJ,EAEIC,YAFJ,QAGO,OAHP;AAIA,IAAMC,KAAK,GAAG;AACVC,EAAAA,OAAO,EAAE,EADC;AAEVC,EAAAA,SAAS,EAAE;AAFD,CAAd;AAIA,IAAMC,SAAS,GAAG;AACdC,EAAAA,cADc,0BACCJ,KADD,EACQC,OADR,EACiB;AAC3BD,IAAAA,KAAK,CAACC,OAAN,GAAgBA,OAAhB;AACH,GAHa;AAIdI,EAAAA,YAJc,wBAIDL,KAJC,EAIME,SAJN,EAIiB;AAC3BF,IAAAA,KAAK,CAACE,SAAN,GAAkBA,SAAlB;AACH;AANa,CAAlB;AAQA,IAAMI,OAAO,GAAG;AACZ;AACMC,EAAAA,cAFM,gCAIT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADCC,cAAAA,MACD,QADCA,MACD;AAAA;AAAA;AAAA,qBAEqBV,cAAc,EAFnC;;AAAA;AAESW,cAAAA,GAFT;;AAGK,kBAAIA,GAAG,CAACC,IAAJ,IAAY,GAAhB,EAAqB;AACjBF,gBAAAA,MAAM,CAAC,gBAAD,EAAmBC,GAAG,CAACE,IAAvB,CAAN;AACH;;AALN;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASF,GAbW;AAcZ;AACMC,EAAAA,YAfM,+BAiBT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADCJ,cAAAA,MACD,SADCA,MACD;AAAA;AAAA,qBACiBT,YAAY,EAD7B;;AAAA;AACKU,cAAAA,GADL;;AAEC,kBAAIA,GAAG,CAACC,IAAJ,IAAY,GAAhB,EAAqB;AACjBF,gBAAAA,MAAM,CAAC,cAAD,EAAiBC,GAAG,CAACE,IAArB,CAAN;AACH;;AAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKF;AAtBW,CAAhB;AAwBA,IAAME,OAAO,GAAG,EAAhB;AAGA,eAAe;AACXb,EAAAA,KAAK,EAALA,KADW;AAEXG,EAAAA,SAAS,EAATA,SAFW;AAGXG,EAAAA,OAAO,EAAPA,OAHW;AAIXO,EAAAA,OAAO,EAAPA;AAJW,CAAf","sourcesContent":["import {\r\n    reqAddressInfo,\r\n    reqOrderInfo\r\n} from \"@/api\"\r\nconst state = {\r\n    address: [],\r\n    orderInfo: {}\r\n}\r\nconst mutations = {\r\n    GETUSERADDRESS(state, address) {\r\n        state.address = address\r\n    },\r\n    GETORDERINFO(state, orderInfo) {\r\n        state.orderInfo = orderInfo\r\n    }\r\n}\r\nconst actions = {\r\n    //获取用户地址信息\r\n    async getUserAddress({\r\n        commit\r\n    }) {\r\n        try {\r\n            let res = await reqAddressInfo()\r\n            if (res.code == 200) {\r\n                commit('GETUSERADDRESS', res.data)\r\n            }\r\n        } catch (error) {\r\n\r\n        }\r\n    },\r\n    //获取商品清单数据\r\n    async getOrderInfo({\r\n        commit\r\n    }) {\r\n        let res = await reqOrderInfo()\r\n        if (res.code == 200) {\r\n            commit('GETORDERINFO', res.data)\r\n        }\r\n    }\r\n}\r\nconst getters = {\r\n\r\n}\r\nexport default {\r\n    state,\r\n    mutations,\r\n    actions,\r\n    getters,\r\n}"]}]}