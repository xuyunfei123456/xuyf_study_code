{"remainingRequest":"C:\\Users\\98751\\Desktop\\code\\projec-SPH\\app\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\98751\\Desktop\\code\\projec-SPH\\app\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\98751\\Desktop\\code\\projec-SPH\\app\\src\\store\\user\\index.js","dependencies":[{"path":"C:\\Users\\98751\\Desktop\\code\\projec-SPH\\app\\src\\store\\user\\index.js","mtime":1641365282528},{"path":"C:\\Users\\98751\\Desktop\\code\\projec-SPH\\app\\babel.config.js","mtime":1642672032543},{"path":"C:\\Users\\98751\\Desktop\\code\\projec-SPH\\app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1638364636780},{"path":"C:\\Users\\98751\\Desktop\\code\\projec-SPH\\app\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1638364638610},{"path":"C:\\Users\\98751\\Desktop\\code\\projec-SPH\\app\\node_modules\\babel-loader\\lib\\index.js","mtime":1638364638144}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkM6XFxVc2Vyc1xcOTg3NTFcXERlc2t0b3BcXGNvZGVcXHByb2plYy1TUEhcXGFwcFxcbm9kZV9tb2R1bGVzXFxAYmFiZWxcXHJ1bnRpbWVcXGhlbHBlcnNcXGVzbVxcYXN5bmNUb0dlbmVyYXRvci5qcyI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCB7IHJlcUdldENvZGUsIHJlcVVzZXJMb2dpbiwgcmVxVXNlclJlZ2lzdGVyLCByZXFVc2VySW5mbywgcmVxTG9nb3V0IH0gZnJvbSAnQC9hcGknOwppbXBvcnQgeyBzZXRUb2tlbiwgZ2V0VG9rZW4sIHJlbW92ZVRva2VuIH0gZnJvbSAnQC91dGlscy90b2tlbic7IC8v55m75b2V5LiO5rOo5YaMCgp2YXIgc3RhdGUgPSB7CiAgY29kZTogIiIsCiAgdG9rZW46IGdldFRva2VuKCksCiAgdXNlckluZm86IHt9Cn07CnZhciBtdXRhdGlvbnMgPSB7CiAgR0VUQ09ERTogZnVuY3Rpb24gR0VUQ09ERShzdGF0ZSwgY29kZSkgewogICAgc3RhdGUuY29kZSA9IGNvZGU7CiAgfSwKICBVU0VSTE9HSU46IGZ1bmN0aW9uIFVTRVJMT0dJTihzdGF0ZSwgdG9rZW4pIHsKICAgIHN0YXRlLnRva2VuID0gdG9rZW47CiAgfSwKICBHRVRVU0VSSU5GTzogZnVuY3Rpb24gR0VUVVNFUklORk8oc3RhdGUsIHVzZXJJbmZvKSB7CiAgICBzdGF0ZS51c2VySW5mbyA9IHVzZXJJbmZvOwogIH0sCiAgLy/muIXpmaTmnKzlnLDmlbDmja4KICBDTEVBUjogZnVuY3Rpb24gQ0xFQVIoc3RhdGUpIHsKICAgIHN0YXRlLnRva2VuID0gJyc7CiAgICBzdGF0ZS51c2VySW5mbyA9IHt9OwogICAgcmVtb3ZlVG9rZW4oKTsKICB9Cn07CnZhciBnZXR0ZXJzID0ge307CnZhciBhY3Rpb25zID0gewogIC8v6I635Y+W6aqM6K+B56CBCiAgZ2V0Q29kZTogZnVuY3Rpb24gZ2V0Q29kZShfcmVmLCBwaG9uZSkgewogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgdmFyIGNvbW1pdCwgcmVzOwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgY29tbWl0ID0gX3JlZi5jb21taXQ7CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDM7CiAgICAgICAgICAgICAgcmV0dXJuIHJlcUdldENvZGUocGhvbmUpOwoKICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgIHJlcyA9IF9jb250ZXh0LnNlbnQ7CgogICAgICAgICAgICAgIGlmICghKHJlcy5jb2RlID09IDIwMCkpIHsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA5OwogICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICBjb21taXQoJ0dFVENPREUnLCByZXMuZGF0YSk7CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIiwgJ29rJyk7CgogICAgICAgICAgICBjYXNlIDk6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIiwgUHJvbWlzZS5yZWplY3QobmV3IEVycm9yKCdmYWlsZScpKSk7CgogICAgICAgICAgICBjYXNlIDEwOgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlKTsKICAgIH0pKSgpOwogIH0sCiAgLy/nlKjmiLfms6jlhowKICB1c2VyUmVnaXN0ZXI6IGZ1bmN0aW9uIHVzZXJSZWdpc3RlcihfcmVmMiwgdXNlcikgewogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoKSB7CiAgICAgIHZhciBjb21taXQsIHJlczsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBjb21taXQgPSBfcmVmMi5jb21taXQ7CiAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAzOwogICAgICAgICAgICAgIHJldHVybiByZXFVc2VyUmVnaXN0ZXIodXNlcik7CgogICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgcmVzID0gX2NvbnRleHQyLnNlbnQ7CgogICAgICAgICAgICAgIGlmICghKHJlcy5jb2RlID09IDIwMCkpIHsKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gODsKICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5hYnJ1cHQoInJldHVybiIsICdvaycpOwoKICAgICAgICAgICAgY2FzZSA4OgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuYWJydXB0KCJyZXR1cm4iLCBQcm9taXNlLnJlamVjdChuZXcgRXJyb3IoJ2ZhaWxlJykpKTsKCiAgICAgICAgICAgIGNhc2UgOToKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUyKTsKICAgIH0pKSgpOwogIH0sCiAgLy/nmbvlvZXkuJrliqEKICB1c2VyTG9naW46IGZ1bmN0aW9uIHVzZXJMb2dpbihfcmVmMywgZGF0YSkgewogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTMoKSB7CiAgICAgIHZhciBjb21taXQsIHJlczsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUzJChfY29udGV4dDMpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dDMucHJldiA9IF9jb250ZXh0My5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBjb21taXQgPSBfcmVmMy5jb21taXQ7CiAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSAzOwogICAgICAgICAgICAgIHJldHVybiByZXFVc2VyTG9naW4oZGF0YSk7CgogICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgcmVzID0gX2NvbnRleHQzLnNlbnQ7CgogICAgICAgICAgICAgIGlmICghKHJlcy5jb2RlID09IDIwMCkpIHsKICAgICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gMTA7CiAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgIC8v55So5oi35bey57uP55m75b2V5oiQ5Yqf5LiU6I635Y+W5YiwdG9rZW4KICAgICAgICAgICAgICBjb21taXQoIlVTRVJMT0dJTiIsIHJlcy5kYXRhLnRva2VuKTsgLy/mjIHkuYXljJblrZjlgqh0b2tlbgoKICAgICAgICAgICAgICBzZXRUb2tlbihyZXMuZGF0YS50b2tlbik7CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5hYnJ1cHQoInJldHVybiIsICdvaycpOwoKICAgICAgICAgICAgY2FzZSAxMDoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLmFicnVwdCgicmV0dXJuIiwgUHJvbWlzZS5yZWplY3QobmV3IEVycm9yKCdmYWlsZScpKSk7CgogICAgICAgICAgICBjYXNlIDExOgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZTMpOwogICAgfSkpKCk7CiAgfSwKICAvL+iOt+WPlueUqOaIt+S/oeaBrwogIGdldFVzZXJJbmZvOiBmdW5jdGlvbiBnZXRVc2VySW5mbyhfcmVmNCkgewogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTQoKSB7CiAgICAgIHZhciBjb21taXQsIHJlc3VsdDsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWU0JChfY29udGV4dDQpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dDQucHJldiA9IF9jb250ZXh0NC5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBjb21taXQgPSBfcmVmNC5jb21taXQ7CiAgICAgICAgICAgICAgX2NvbnRleHQ0Lm5leHQgPSAzOwogICAgICAgICAgICAgIHJldHVybiByZXFVc2VySW5mbygpOwoKICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgIHJlc3VsdCA9IF9jb250ZXh0NC5zZW50OwoKICAgICAgICAgICAgICBpZiAoIShyZXN1bHQuY29kZSA9PSAyMDApKSB7CiAgICAgICAgICAgICAgICBfY29udGV4dDQubmV4dCA9IDk7CiAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgIC8v5o+Q5Lqk55So5oi35L+h5oGvCiAgICAgICAgICAgICAgY29tbWl0KCJHRVRVU0VSSU5GTyIsIHJlc3VsdC5kYXRhKTsKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ0LmFicnVwdCgicmV0dXJuIiwgJ29rJyk7CgogICAgICAgICAgICBjYXNlIDk6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0NC5hYnJ1cHQoInJldHVybiIsIFByb21pc2UucmVqZWN0KG5ldyBFcnJvcignZmFpbGUnKSkpOwoKICAgICAgICAgICAgY2FzZSAxMDoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ0LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWU0KTsKICAgIH0pKSgpOwogIH0sCiAgLy8g6YCA5Ye655m75b2VCiAgdXNlckxvZ291dDogZnVuY3Rpb24gdXNlckxvZ291dChfcmVmNSkgewogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTUoKSB7CiAgICAgIHZhciBjb21taXQsIHJlczsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWU1JChfY29udGV4dDUpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dDUucHJldiA9IF9jb250ZXh0NS5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBjb21taXQgPSBfcmVmNS5jb21taXQ7CiAgICAgICAgICAgICAgX2NvbnRleHQ1Lm5leHQgPSAzOwogICAgICAgICAgICAgIHJldHVybiByZXFMb2dvdXQoKTsKCiAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICByZXMgPSBfY29udGV4dDUuc2VudDsKCiAgICAgICAgICAgICAgaWYgKCEocmVzLmNvZGUgPT0gMjAwKSkgewogICAgICAgICAgICAgICAgX2NvbnRleHQ1Lm5leHQgPSA5OwogICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICBjb21taXQoIkNMRUFSIik7CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0NS5hYnJ1cHQoInJldHVybiIsICdvaycpOwoKICAgICAgICAgICAgY2FzZSA5OgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDUuYWJydXB0KCJyZXR1cm4iLCBQcm9taXNlLnJlamVjdChuZXcgRXJyb3IoJ2ZhaWxlJykpKTsKCiAgICAgICAgICAgIGNhc2UgMTA6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0NS5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlNSk7CiAgICB9KSkoKTsKICB9Cn07CmV4cG9ydCBkZWZhdWx0IHsKICBzdGF0ZTogc3RhdGUsCiAgbXV0YXRpb25zOiBtdXRhdGlvbnMsCiAgZ2V0dGVyczogZ2V0dGVycywKICBhY3Rpb25zOiBhY3Rpb25zCn07"},{"version":3,"sources":["C:/Users/98751/Desktop/code/projec-SPH/app/src/store/user/index.js"],"names":["reqGetCode","reqUserLogin","reqUserRegister","reqUserInfo","reqLogout","setToken","getToken","removeToken","state","code","token","userInfo","mutations","GETCODE","USERLOGIN","GETUSERINFO","CLEAR","getters","actions","getCode","phone","commit","res","data","Promise","reject","Error","userRegister","user","userLogin","getUserInfo","result","userLogout"],"mappings":";;;AAAA,SACIA,UADJ,EAEIC,YAFJ,EAGIC,eAHJ,EAIIC,WAJJ,EAKIC,SALJ,QAMO,OANP;AAOA,SACIC,QADJ,EAEIC,QAFJ,EAGIC,WAHJ,QAIO,eAJP,C,CAKA;;AACA,IAAMC,KAAK,GAAG;AACVC,EAAAA,IAAI,EAAE,EADI;AAEVC,EAAAA,KAAK,EAAEJ,QAAQ,EAFL;AAGVK,EAAAA,QAAQ,EAAE;AAHA,CAAd;AAKA,IAAMC,SAAS,GAAG;AACdC,EAAAA,OADc,mBACNL,KADM,EACCC,IADD,EACO;AACjBD,IAAAA,KAAK,CAACC,IAAN,GAAaA,IAAb;AACH,GAHa;AAIdK,EAAAA,SAJc,qBAIJN,KAJI,EAIGE,KAJH,EAIU;AACpBF,IAAAA,KAAK,CAACE,KAAN,GAAcA,KAAd;AACH,GANa;AAOdK,EAAAA,WAPc,uBAOFP,KAPE,EAOKG,QAPL,EAOe;AACzBH,IAAAA,KAAK,CAACG,QAAN,GAAiBA,QAAjB;AACH,GATa;AAUd;AACAK,EAAAA,KAXc,iBAWRR,KAXQ,EAWD;AACTA,IAAAA,KAAK,CAACE,KAAN,GAAc,EAAd;AACAF,IAAAA,KAAK,CAACG,QAAN,GAAiB,EAAjB;AACAJ,IAAAA,WAAW;AACd;AAfa,CAAlB;AAiBA,IAAMU,OAAO,GAAG,EAAhB;AACA,IAAMC,OAAO,GAAG;AACZ;AACMC,EAAAA,OAFM,yBAITC,KAJS,EAIF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADNC,cAAAA,MACM,QADNA,MACM;AAAA;AAAA,qBAEUrB,UAAU,CAACoB,KAAD,CAFpB;;AAAA;AAEFE,cAAAA,GAFE;;AAAA,oBAGFA,GAAG,CAACb,IAAJ,IAAY,GAHV;AAAA;AAAA;AAAA;;AAIFY,cAAAA,MAAM,CAAC,SAAD,EAAYC,GAAG,CAACC,IAAhB,CAAN;AAJE,+CAKK,IALL;;AAAA;AAAA,+CAOKC,OAAO,CAACC,MAAR,CAAe,IAAIC,KAAJ,CAAU,OAAV,CAAf,CAPL;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAST,GAbW;AAcZ;AACMC,EAAAA,YAfM,+BAiBTC,IAjBS,EAiBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADLP,cAAAA,MACK,SADLA,MACK;AAAA;AAAA,qBACWnB,eAAe,CAAC0B,IAAD,CAD1B;;AAAA;AACDN,cAAAA,GADC;;AAAA,oBAEDA,GAAG,CAACb,IAAJ,IAAY,GAFX;AAAA;AAAA;AAAA;;AAAA,gDAGM,IAHN;;AAAA;AAAA,gDAKMe,OAAO,CAACC,MAAR,CAAe,IAAIC,KAAJ,CAAU,OAAV,CAAf,CALN;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOR,GAxBW;AAyBZ;AACMG,EAAAA,SA1BM,4BA4BTN,IA5BS,EA4BH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADLF,cAAAA,MACK,SADLA,MACK;AAAA;AAAA,qBACWpB,YAAY,CAACsB,IAAD,CADvB;;AAAA;AACDD,cAAAA,GADC;;AAAA,oBAGDA,GAAG,CAACb,IAAJ,IAAY,GAHX;AAAA;AAAA;AAAA;;AAID;AACAY,cAAAA,MAAM,CAAC,WAAD,EAAcC,GAAG,CAACC,IAAJ,CAASb,KAAvB,CAAN,CALC,CAMD;;AACAL,cAAAA,QAAQ,CAACiB,GAAG,CAACC,IAAJ,CAASb,KAAV,CAAR;AAPC,gDAQM,IARN;;AAAA;AAAA,gDAUMc,OAAO,CAACC,MAAR,CAAe,IAAIC,KAAJ,CAAU,OAAV,CAAf,CAVN;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYR,GAxCW;AAyCZ;AAEMI,EAAAA,WA3CM,8BA6CT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADCT,cAAAA,MACD,SADCA,MACD;AAAA;AAAA,qBACoBlB,WAAW,EAD/B;;AAAA;AACK4B,cAAAA,MADL;;AAAA,oBAEKA,MAAM,CAACtB,IAAP,IAAe,GAFpB;AAAA;AAAA;AAAA;;AAGK;AACAY,cAAAA,MAAM,CAAC,aAAD,EAAgBU,MAAM,CAACR,IAAvB,CAAN;AAJL,gDAKY,IALZ;;AAAA;AAAA,gDAOYC,OAAO,CAACC,MAAR,CAAe,IAAIC,KAAJ,CAAU,OAAV,CAAf,CAPZ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASF,GAtDW;AAuDZ;AACMM,EAAAA,UAxDM,6BA0DT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADCX,cAAAA,MACD,SADCA,MACD;AAAA;AAAA,qBAEiBjB,SAAS,EAF1B;;AAAA;AAEKkB,cAAAA,GAFL;;AAAA,oBAIKA,GAAG,CAACb,IAAJ,IAAY,GAJjB;AAAA;AAAA;AAAA;;AAKKY,cAAAA,MAAM,CAAC,OAAD,CAAN;AALL,gDAMY,IANZ;;AAAA;AAAA,gDAQYG,OAAO,CAACC,MAAR,CAAe,IAAIC,KAAJ,CAAU,OAAV,CAAf,CARZ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUF;AApEW,CAAhB;AAsEA,eAAe;AACXlB,EAAAA,KAAK,EAALA,KADW;AAEXI,EAAAA,SAAS,EAATA,SAFW;AAGXK,EAAAA,OAAO,EAAPA,OAHW;AAIXC,EAAAA,OAAO,EAAPA;AAJW,CAAf","sourcesContent":["import {\r\n    reqGetCode,\r\n    reqUserLogin,\r\n    reqUserRegister,\r\n    reqUserInfo,\r\n    reqLogout\r\n} from '@/api'\r\nimport {\r\n    setToken,\r\n    getToken,\r\n    removeToken\r\n} from '@/utils/token'\r\n//登录与注册\r\nconst state = {\r\n    code: \"\",\r\n    token: getToken(),\r\n    userInfo: {}\r\n}\r\nconst mutations = {\r\n    GETCODE(state, code) {\r\n        state.code = code\r\n    },\r\n    USERLOGIN(state, token) {\r\n        state.token = token\r\n    },\r\n    GETUSERINFO(state, userInfo) {\r\n        state.userInfo = userInfo\r\n    },\r\n    //清除本地数据\r\n    CLEAR(state) {\r\n        state.token = '';\r\n        state.userInfo = {};\r\n        removeToken()\r\n    }\r\n}\r\nconst getters = {}\r\nconst actions = {\r\n    //获取验证码\r\n    async getCode({\r\n        commit\r\n    }, phone) {\r\n        //获取验证码的这个接口，把验证码返回，但是正常情况下，后台把验证码发到用户手机上\r\n        let res = await reqGetCode(phone)\r\n        if (res.code == 200) {\r\n            commit('GETCODE', res.data)\r\n            return 'ok'\r\n        } else {\r\n            return Promise.reject(new Error('faile'))\r\n        }\r\n    },\r\n    //用户注册\r\n    async userRegister({\r\n        commit\r\n    }, user) {\r\n        let res = await reqUserRegister(user)\r\n        if (res.code == 200) {\r\n            return 'ok'\r\n        } else {\r\n            return Promise.reject(new Error('faile'))\r\n        }\r\n    },\r\n    //登录业务\r\n    async userLogin({\r\n        commit\r\n    }, data) {\r\n        let res = await reqUserLogin(data)\r\n        //服务器下发token,用户唯一标识符\r\n        if (res.code == 200) {\r\n            //用户已经登录成功且获取到token\r\n            commit(\"USERLOGIN\", res.data.token)\r\n            //持久化存储token\r\n            setToken(res.data.token)\r\n            return 'ok'\r\n        } else {\r\n            return Promise.reject(new Error('faile'))\r\n        }\r\n    },\r\n    //获取用户信息\r\n\r\n    async getUserInfo({\r\n        commit\r\n    }) {\r\n        let result = await reqUserInfo();\r\n        if (result.code == 200) {\r\n            //提交用户信息\r\n            commit(\"GETUSERINFO\", result.data);\r\n            return 'ok'\r\n        } else {\r\n            return Promise.reject(new Error('faile'))\r\n        }\r\n    },\r\n    // 退出登录\r\n    async userLogout({\r\n        commit\r\n    }) {\r\n        //只是像服务器发起一次请求，通知服务器清除token\r\n        let res = await reqLogout()\r\n        //action不能操作state\r\n        if (res.code == 200) {\r\n            commit(\"CLEAR\")\r\n            return 'ok'\r\n        } else {\r\n            return Promise.reject(new Error('faile'))\r\n        }\r\n    }\r\n}\r\nexport default {\r\n    state,\r\n    mutations,\r\n    getters,\r\n    actions,\r\n}"]}]}