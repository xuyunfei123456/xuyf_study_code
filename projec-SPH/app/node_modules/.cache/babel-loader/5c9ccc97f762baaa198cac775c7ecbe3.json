{"remainingRequest":"C:\\Users\\98751\\Desktop\\code\\projec-SPH\\app\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\98751\\Desktop\\code\\projec-SPH\\app\\src\\store\\shopcart\\index.js","dependencies":[{"path":"C:\\Users\\98751\\Desktop\\code\\projec-SPH\\app\\src\\store\\shopcart\\index.js","mtime":1641115000640},{"path":"C:\\Users\\98751\\Desktop\\code\\projec-SPH\\app\\babel.config.js","mtime":1642672032543},{"path":"C:\\Users\\98751\\Desktop\\code\\projec-SPH\\app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1638364636780},{"path":"C:\\Users\\98751\\Desktop\\code\\projec-SPH\\app\\node_modules\\babel-loader\\lib\\index.js","mtime":1638364638144}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkM6XFxVc2Vyc1xcOTg3NTFcXERlc2t0b3BcXGNvZGVcXHByb2plYy1TUEhcXGFwcFxcbm9kZV9tb2R1bGVzXFxAYmFiZWxcXHJ1bnRpbWVcXGhlbHBlcnNcXGVzbVxcYXN5bmNUb0dlbmVyYXRvci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLmZvci1lYWNoLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLml0ZXJhdG9yLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5pdGVyYXRvci5qcyI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0IHsgcmVxQ2FydExpc3QsIHJlcURlbGV0ZUNhcnQsIHJlcVVwZGF0ZUNoZWNrZWRCeUlkIH0gZnJvbSAiQC9hcGkiOwp2YXIgc3RhdGUgPSB7CiAgY2FydExpc3Q6IFtdCn07CnZhciBtdXRhdGlvbnMgPSB7CiAgR0VUQ0FSVExJU1Q6IGZ1bmN0aW9uIEdFVENBUlRMSVNUKHN0YXRlLCBjYXJ0TGlzdCkgewogICAgc3RhdGUuY2FydExpc3QgPSBjYXJ0TGlzdDsKICB9Cn07CnZhciBhY3Rpb25zID0gewogIC8v6I635Y+W6LSt54mp6L2m5YiX6KGo5pWw5o2uCiAgZ2V0Q2FydExpc3Q6IGZ1bmN0aW9uIGdldENhcnRMaXN0KF9yZWYpIHsKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgIHZhciBjb21taXQsIHJlc3VsdDsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIGNvbW1pdCA9IF9yZWYuY29tbWl0OwogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAzOwogICAgICAgICAgICAgIHJldHVybiByZXFDYXJ0TGlzdCgpOwoKICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgIHJlc3VsdCA9IF9jb250ZXh0LnNlbnQ7CgogICAgICAgICAgICAgIGlmIChyZXN1bHQuY29kZSA9PSAyMDApIHsKICAgICAgICAgICAgICAgIGNvbW1pdCgiR0VUQ0FSVExJU1QiLCByZXN1bHQuZGF0YSk7CiAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlKTsKICAgIH0pKSgpOwogIH0sCiAgLy/liKDpmaTotK3nianovabmn5DkuKrkuqflk4EKICBkZWxldGVDYXJ0TGlzdEJ5U2t1SWQ6IGZ1bmN0aW9uIGRlbGV0ZUNhcnRMaXN0QnlTa3VJZChfcmVmMiwgc2t1SWQpIHsKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKCkgewogICAgICB2YXIgY29tbWl0LCByZXN1bHQ7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgY29tbWl0ID0gX3JlZjIuY29tbWl0OwogICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMzsKICAgICAgICAgICAgICByZXR1cm4gcmVxRGVsZXRlQ2FydChza3VJZCk7CgogICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgcmVzdWx0ID0gX2NvbnRleHQyLnNlbnQ7CgogICAgICAgICAgICAgIGlmICghKHJlc3VsdC5jb2RlID09IDIwMCkpIHsKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gODsKICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5hYnJ1cHQoInJldHVybiIsICdvaycpOwoKICAgICAgICAgICAgY2FzZSA4OgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuYWJydXB0KCJyZXR1cm4iLCBQcm9taXNlLnJlamVjdChuZXcgRXJyb3IoJ2ZhaWxlJykpKTsKCiAgICAgICAgICAgIGNhc2UgOToKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUyKTsKICAgIH0pKSgpOwogIH0sCiAgLy/kv67mlLnotK3nianovabmn5DkuIDkuKrkuqflk4HnmoTpgInkuK3nirbmgIEKICB1cGRhdGVDaGVja2VkQnlJZDogZnVuY3Rpb24gdXBkYXRlQ2hlY2tlZEJ5SWQoX3JlZjMsIF9yZWY0KSB7CiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMygpIHsKICAgICAgdmFyIGNvbW1pdCwgc2t1SWQsIGlzQ2hlY2tlZCwgcmVzdWx0OwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTMkKF9jb250ZXh0MykgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0My5wcmV2ID0gX2NvbnRleHQzLm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIGNvbW1pdCA9IF9yZWYzLmNvbW1pdDsKICAgICAgICAgICAgICBza3VJZCA9IF9yZWY0LnNrdUlkLCBpc0NoZWNrZWQgPSBfcmVmNC5pc0NoZWNrZWQ7CiAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSA0OwogICAgICAgICAgICAgIHJldHVybiByZXFVcGRhdGVDaGVja2VkQnlJZChza3VJZCwgaXNDaGVja2VkKTsKCiAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgICByZXN1bHQgPSBfY29udGV4dDMuc2VudDsKCiAgICAgICAgICAgICAgaWYgKCEocmVzdWx0LmNvZGUgPT0gMjAwKSkgewogICAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSA5OwogICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLmFicnVwdCgicmV0dXJuIiwgJ29rJyk7CgogICAgICAgICAgICBjYXNlIDk6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5hYnJ1cHQoInJldHVybiIsIFByb21pc2UucmVqZWN0KG5ldyBFcnJvcignZmFpbGUnKSkpOwoKICAgICAgICAgICAgY2FzZSAxMDoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUzKTsKICAgIH0pKSgpOwogIH0sCiAgLy/liKDpmaTlhajpg6jllYblk4EKICBkZWxldGVBbGxDaGVja2VkQ2FydDogZnVuY3Rpb24gZGVsZXRlQWxsQ2hlY2tlZENhcnQoX3JlZjUpIHsKICAgIHZhciBkaXNwYXRjaCA9IF9yZWY1LmRpc3BhdGNoLAogICAgICAgIGdldHRlcnMgPSBfcmVmNS5nZXR0ZXJzOwogICAgLy/lsI/ku5PlupMgY29udGV4dCBjb21taXTjgJDmj5DkuqRtdXRhdGlvbnPjgJEgZ2V0dGVyc+OAkOiuoeeul+WxnuaAp+OAkSBkaXNwYXRjaOOAkOa0vuWPkWFjdGlvbuOAkSBzdGF0ZeOAkOW9k+WJjeS7k+W6k+aVsOaNruOAkQogICAgLy/ojrflj5botK3nianovabkuK3lhajpg6jkuqflk4HjgJDmmK/kuIDkuKrmlbDnu4TjgJEKICAgIHZhciBwcm9taXNlQWxsID0gW107CiAgICBnZXR0ZXJzLmNhcnRMaXN0LmNhcnRJbmZvTGlzdC5mb3JFYWNoKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgIHZhciBwcm9taXNlID0gaXRlbS5pc0NoZWNrZWQgPT0gMSA/IGRpc3BhdGNoKCdkZWxldGVDYXJ0TGlzdEJ5U2t1SWQnLCBpdGVtLnNrdUlkKSA6ICcnOyAvL+Wwhuavj+S4gOasoei/lOWbnueahFByb21pc2Xmt7vliqDliLDmlbDnu4TkuK0KCiAgICAgIHByb21pc2VBbGwucHVzaChwcm9taXNlKTsKICAgIH0pOyAvL+WPquacieWFqOmDqOmDveaIkOWKn++8jOaJjei/lOWbnnRydWUKCiAgICByZXR1cm4gUHJvbWlzZS5hbGwocHJvbWlzZUFsbCk7CiAgfSwKICAvL+S/ruaUueWFqOmDqOS6p+WTgeeahOeKtuaAgQogIHVwZGF0ZUFsbENhcnRJc0NoZWNrZWQ6IGZ1bmN0aW9uIHVwZGF0ZUFsbENhcnRJc0NoZWNrZWQoX3JlZjYsIGlzQ2hlY2tlZCkgewogICAgdmFyIGRpc3BhdGNoID0gX3JlZjYuZGlzcGF0Y2gsCiAgICAgICAgc3RhdGUgPSBfcmVmNi5zdGF0ZTsKICAgIHZhciBwcm9taXNlQWxsID0gW107CiAgICBzdGF0ZS5jYXJ0TGlzdFswXS5jYXJ0SW5mb0xpc3QuZm9yRWFjaChmdW5jdGlvbiAoaXRlbSkgewogICAgICB2YXIgcHJvbWlzZSA9IGRpc3BhdGNoKCd1cGRhdGVDaGVja2VkQnlJZCcsIHsKICAgICAgICBza3VJZDogaXRlbS5za3VJZCwKICAgICAgICBpc0NoZWNrZWQ6IGlzQ2hlY2tlZAogICAgICB9KTsKICAgICAgcHJvbWlzZUFsbC5wdXNoKHByb21pc2UpOwogICAgfSk7IC8v5pyA57uI57uT5p6c6L+U5ZueCgogICAgcmV0dXJuIFByb21pc2UuYWxsKHByb21pc2VBbGwpOwogIH0KfTsKdmFyIGdldHRlcnMgPSB7CiAgY2FydExpc3Q6IGZ1bmN0aW9uIGNhcnRMaXN0KHN0YXRlKSB7CiAgICByZXR1cm4gc3RhdGUuY2FydExpc3RbMF0gfHwge307CiAgfQp9OwpleHBvcnQgZGVmYXVsdCB7CiAgc3RhdGU6IHN0YXRlLAogIG11dGF0aW9uczogbXV0YXRpb25zLAogIGFjdGlvbnM6IGFjdGlvbnMsCiAgZ2V0dGVyczogZ2V0dGVycwp9Ow=="},{"version":3,"sources":["C:/Users/98751/Desktop/code/projec-SPH/app/src/store/shopcart/index.js"],"names":["reqCartList","reqDeleteCart","reqUpdateCheckedById","state","cartList","mutations","GETCARTLIST","actions","getCartList","commit","result","code","data","deleteCartListBySkuId","skuId","Promise","reject","Error","updateCheckedById","isChecked","deleteAllCheckedCart","dispatch","getters","promiseAll","cartInfoList","forEach","item","promise","push","all","updateAllCartIsChecked"],"mappings":"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","sourcesContent":["import {\r\n    reqCartList,\r\n    reqDeleteCart,\r\n    reqUpdateCheckedById\r\n} from \"@/api\"\r\nconst state = {\r\n    cartList: []\r\n}\r\nconst mutations = {\r\n    GETCARTLIST(state, cartList) {\r\n        state.cartList = cartList\r\n    }\r\n}\r\nconst actions = {\r\n    //获取购物车列表数据\r\n    async getCartList({\r\n        commit\r\n    }) {\r\n        let result = await reqCartList()\r\n        if (result.code == 200) {\r\n            commit(\"GETCARTLIST\", result.data)\r\n        }\r\n    },\r\n    //删除购物车某个产品\r\n    async deleteCartListBySkuId({\r\n        commit\r\n    }, skuId) {\r\n        let result = await reqDeleteCart(skuId)\r\n        if (result.code == 200) {\r\n            return 'ok'\r\n        } else {\r\n            return Promise.reject(new Error('faile'))\r\n        }\r\n    },\r\n    //修改购物车某一个产品的选中状态\r\n    async updateCheckedById({\r\n        commit\r\n    }, {\r\n        skuId,\r\n        isChecked\r\n    }) {\r\n        let result = await reqUpdateCheckedById(skuId, isChecked)\r\n        if (result.code == 200) {\r\n            return 'ok'\r\n        } else {\r\n            return Promise.reject(new Error('faile'))\r\n        }\r\n    },\r\n    //删除全部商品\r\n    deleteAllCheckedCart({\r\n        dispatch,\r\n        getters\r\n    }) {\r\n        //小仓库 context commit【提交mutations】 getters【计算属性】 dispatch【派发action】 state【当前仓库数据】\r\n        //获取购物车中全部产品【是一个数组】\r\n        let promiseAll = []\r\n        getters.cartList.cartInfoList.forEach(item => {\r\n            let promise = item.isChecked == 1 ? dispatch('deleteCartListBySkuId', item.skuId) : ''\r\n            //将每一次返回的Promise添加到数组中\r\n            promiseAll.push(promise)\r\n        })\r\n        //只有全部都成功，才返回true\r\n        return Promise.all(promiseAll)\r\n    },\r\n    //修改全部产品的状态\r\n    updateAllCartIsChecked({\r\n        dispatch,\r\n        state\r\n    }, isChecked) {\r\n        let promiseAll = []\r\n        state.cartList[0].cartInfoList.forEach(item => {\r\n            let promise = dispatch('updateCheckedById', {\r\n                skuId: item.skuId,\r\n                isChecked\r\n            })\r\n            promiseAll.push(promise)\r\n        })\r\n        //最终结果返回\r\n        return Promise.all(promiseAll)\r\n    }\r\n}\r\nconst getters = {\r\n    cartList(state) {\r\n        return state.cartList[0] || {}\r\n    }\r\n}\r\nexport default {\r\n    state,\r\n    mutations,\r\n    actions,\r\n    getters,\r\n}"]}]}